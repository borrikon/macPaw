{"ast":null,"code":"import { createContext } from 'react';\nimport { observable, action, decorate } from 'mobx';\nimport { joke_api } from '../api/joke';\n\nclass Main {\n  async getCategories() {\n    const res = await joke_api.getCategoryList();\n    this.categories = res.data;\n  }\n\n  async getJokeByCategory(category) {\n    this.clean();\n    const res = await joke_api.getJokeFromCat(category);\n    this.jokeList.push(res.data);\n  }\n\n  async getRandomJoke() {\n    this.clean();\n    const res = await joke_api.getRandomJoke();\n    this.jokeList.push(res.data);\n  }\n\n  async getJokeBySearchField(searchText) {\n    this.clean();\n    const res = await joke_api.getFreeTextSearch(searchText);\n    this.jokeList = res.data.result;\n  }\n\n  clean() {\n    this.jokeList = [];\n  }\n\n  constructor() {\n    this.categories = [];\n    this.jokeList = [];\n    this.getCategories = this.getCategories.bind(this);\n    this.getJokeBySearchField = this.getJokeBySearchField.bind(this);\n    this.getJokeByCategory = this.getJokeByCategory.bind(this);\n    this.getRandomJoke = this.getRandomJoke.bind(this);\n    this.clean = this.clean.bind(this);\n  }\n\n}\n\ndecorate(Main, {\n  categories: observable,\n  jokeList: observable,\n  getCategories: action,\n  getJokeByCategory: action,\n  getJokeBySearchField: action,\n  clean: action,\n  getRandomJoke: action\n});\nexport const main_store = new Main();\nexport const main_store_ctx = createContext(main_store);","map":{"version":3,"sources":["D:/Work/myProject/mac-paw-test/src/store/main_store.js"],"names":["createContext","observable","action","decorate","joke_api","Main","getCategories","res","getCategoryList","categories","data","getJokeByCategory","category","clean","getJokeFromCat","jokeList","push","getRandomJoke","getJokeBySearchField","searchText","getFreeTextSearch","result","constructor","bind","main_store","main_store_ctx"],"mappings":"AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,QAA7B,QAA6C,MAA7C;AAEA,SAASC,QAAT,QAAyB,aAAzB;;AAEA,MAAMC,IAAN,CAAW;AAIP,QAAMC,aAAN,GAAsB;AAClB,UAAMC,GAAG,GAAG,MAAMH,QAAQ,CAACI,eAAT,EAAlB;AACA,SAAKC,UAAL,GAAkBF,GAAG,CAACG,IAAtB;AACH;;AAED,QAAMC,iBAAN,CAAwBC,QAAxB,EAAkC;AAC9B,SAAKC,KAAL;AACA,UAAMN,GAAG,GAAG,MAAOH,QAAQ,CAACU,cAAT,CAAwBF,QAAxB,CAAnB;AACA,SAAKG,QAAL,CAAcC,IAAd,CAAmBT,GAAG,CAACG,IAAvB;AACH;;AAED,QAAMO,aAAN,GAAsB;AAClB,SAAKJ,KAAL;AACA,UAAMN,GAAG,GAAG,MAAMH,QAAQ,CAACa,aAAT,EAAlB;AACA,SAAKF,QAAL,CAAcC,IAAd,CAAmBT,GAAG,CAACG,IAAvB;AACH;;AAED,QAAMQ,oBAAN,CAA2BC,UAA3B,EAAuC;AACnC,SAAKN,KAAL;AACA,UAAMN,GAAG,GAAG,MAAMH,QAAQ,CAACgB,iBAAT,CAA2BD,UAA3B,CAAlB;AACA,SAAKJ,QAAL,GAAgBR,GAAG,CAACG,IAAJ,CAASW,MAAzB;AACH;;AAEDR,EAAAA,KAAK,GAAG;AACJ,SAAKE,QAAL,GAAgB,EAAhB;AACH;;AAEDO,EAAAA,WAAW,GAAG;AAAA,SA9Bdb,UA8Bc,GA9BD,EA8BC;AAAA,SA7BdM,QA6Bc,GA7BH,EA6BG;AACV,SAAKT,aAAL,GAAqB,KAAKA,aAAL,CAAmBiB,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKL,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BK,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAKZ,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBY,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKN,aAAL,GAAqB,KAAKA,aAAL,CAAmBM,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKV,KAAL,GAAa,KAAKA,KAAL,CAAWU,IAAX,CAAgB,IAAhB,CAAb;AACH;;AArCM;;AAwCXpB,QAAQ,CAACE,IAAD,EAAO;AACXI,EAAAA,UAAU,EAAER,UADD;AAEXc,EAAAA,QAAQ,EAAEd,UAFC;AAGXK,EAAAA,aAAa,EAAEJ,MAHJ;AAIXS,EAAAA,iBAAiB,EAAET,MAJR;AAKXgB,EAAAA,oBAAoB,EAAEhB,MALX;AAMXW,EAAAA,KAAK,EAAEX,MANI;AAOXe,EAAAA,aAAa,EAAEf;AAPJ,CAAP,CAAR;AAUA,OAAO,MAAMsB,UAAU,GAAG,IAAInB,IAAJ,EAAnB;AACP,OAAO,MAAMoB,cAAc,GAAGzB,aAAa,CAACwB,UAAD,CAApC","sourcesContent":["import { createContext } from 'react';\nimport { observable, action, decorate } from 'mobx';\n\nimport { joke_api } from '../api/joke';\n\nclass Main {\n    categories = [];\n    jokeList = [];\n\n    async getCategories() {\n        const res = await joke_api.getCategoryList();\n        this.categories = res.data;\n    }\n\n    async getJokeByCategory(category) {\n        this.clean()\n        const res = await  joke_api.getJokeFromCat(category);\n        this.jokeList.push(res.data);\n    }\n\n    async getRandomJoke() {\n        this.clean()\n        const res = await joke_api.getRandomJoke()\n        this.jokeList.push(res.data);\n    }\n\n    async getJokeBySearchField(searchText) {\n        this.clean()\n        const res = await joke_api.getFreeTextSearch(searchText);\n        this.jokeList = res.data.result;\n    }\n\n    clean() {\n        this.jokeList = [];\n    }\n\n    constructor() {\n        this.getCategories = this.getCategories.bind(this);\n        this.getJokeBySearchField = this.getJokeBySearchField.bind(this);\n        this.getJokeByCategory = this.getJokeByCategory.bind(this);\n        this.getRandomJoke = this.getRandomJoke.bind(this);\n        this.clean = this.clean.bind(this);\n    }\n}\n\ndecorate(Main, {\n    categories: observable,\n    jokeList: observable,\n    getCategories: action,\n    getJokeByCategory: action,\n    getJokeBySearchField: action,\n    clean: action,\n    getRandomJoke: action\n})\n\nexport const main_store = new Main();\nexport const main_store_ctx = createContext(main_store);\n"]},"metadata":{},"sourceType":"module"}