{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\myProject\\\\mac-paw-test\\\\src\\\\components\\\\home\\\\index.js\";\nimport React, { useEffect, useContext } from 'react';\nimport { observer } from 'mobx-react';\nimport Radio from '@material-ui/core/Radio';\nimport Button from '@material-ui/core/Button';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { main_store_ctx } from '../../store/main_store';\nimport { useStyles } from './styles';\nimport { choose_joke_store_ctx } from './store';\nconst ChooseJoke = observer(() => {\n  const {\n    mainContainer,\n    radio,\n    categoriesStyle,\n    searchInput,\n    categoriesActive,\n    buttonSubmit,\n    appContainer\n  } = useStyles({});\n  const {\n    searchValue,\n    handleChangeSearchValue,\n    typeOfJoke,\n    changeTypeOfJoke,\n    chosedCategory,\n    choseCategory,\n    getJokeButtonPressed\n  } = useContext(choose_joke_store_ctx);\n  const {\n    categories,\n    getCategories\n  } = useContext(main_store_ctx);\n  useEffect(() => {\n    getCategories();\n  }, []);\n\n  const renderJokeCategory = () => {\n    return categories.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: chosedCategory === item ? categoriesActive : null,\n        onClick: () => {\n          choseCategory(item);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }\n      }, item));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: appContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: mainContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"MSI 2020\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Hey!\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"Let\\u2019s try to find a joke for you:\"), /*#__PURE__*/React.createElement(RadioGroup, {\n    \"aria-label\": \"typeOfSearch\",\n    name: \"typeOfSearch\",\n    value: typeOfJoke,\n    onChange: e => changeTypeOfJoke(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: radio,\n    value: \"random\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 34\n      }\n    }),\n    label: \"Random\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: radio,\n    value: \"categories\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 34\n      }\n    }),\n    label: \"From Categories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }), typeOfJoke === 'categories' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: categoriesStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 31\n    }\n  }, renderJokeCategory()) : null, /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: radio,\n    value: \"search\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 34\n      }\n    }),\n    label: \"Search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }), typeOfJoke === 'search' ? /*#__PURE__*/React.createElement(\"input\", {\n    className: searchInput,\n    type: \"text\",\n    placeholder: \"Free text search...\",\n    value: searchValue,\n    onChange: e => {\n      handleChangeSearchValue(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 31\n    }\n  }) : null), /*#__PURE__*/React.createElement(Button, {\n    className: buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: getJokeButtonPressed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, \"Get a joke\")));\n});\nexport default ChooseJoke;","map":{"version":3,"sources":["D:/Work/myProject/mac-paw-test/src/components/home/index.js"],"names":["React","useEffect","useContext","observer","Radio","Button","RadioGroup","FormControlLabel","main_store_ctx","useStyles","choose_joke_store_ctx","ChooseJoke","mainContainer","radio","categoriesStyle","searchInput","categoriesActive","buttonSubmit","appContainer","searchValue","handleChangeSearchValue","typeOfJoke","changeTypeOfJoke","chosedCategory","choseCategory","getJokeButtonPressed","categories","getCategories","renderJokeCategory","map","item","index","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext } from 'react'\nimport { observer } from 'mobx-react'\nimport Radio from '@material-ui/core/Radio'\nimport Button from '@material-ui/core/Button'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\n\nimport { main_store_ctx } from '../../store/main_store';\n\nimport { useStyles } from './styles'\nimport { choose_joke_store_ctx } from './store';\n\n\nconst ChooseJoke = observer(() => {\n\n    const {\n        mainContainer, radio, categoriesStyle, searchInput,\n        categoriesActive, buttonSubmit, appContainer\n    } = useStyles({});\n\n    const {\n        searchValue, handleChangeSearchValue, typeOfJoke,\n        changeTypeOfJoke, chosedCategory, choseCategory,\n        getJokeButtonPressed\n    } = useContext(choose_joke_store_ctx);\n\n    const {\n        categories, getCategories\n    } = useContext(main_store_ctx);\n\n    useEffect(()=>{\n        getCategories();\n    }, []);\n\n    const renderJokeCategory = () => {\n        return (\n            categories.map((item, index)=>{\n                return (\n                    <div\n                        key={index}\n                        className={ (chosedCategory === item) ? categoriesActive : null}\n                        onClick={() => {choseCategory(item)}}\n                    >\n                        <span>\n                            {item}\n                        </span>\n                    </div>\n                )\n            })\n        )\n    }\n\n    return (\n        <div className={appContainer}>\n            <div className={mainContainer}>\n                <h4>MSI 2020</h4>\n                <h1>Hey!</h1>\n                <h2>Let’s try to find a joke for you:</h2>\n                <RadioGroup\n                    aria-label=\"typeOfSearch\"\n                    name=\"typeOfSearch\"\n                    value={typeOfJoke}\n                    onChange={(e) => changeTypeOfJoke(e.target.value)}\n                >\n                    <FormControlLabel\n                        className={radio}\n                        value=\"random\"\n                        control={<Radio  />}\n                        label=\"Random\"\n                    />\n                    <FormControlLabel\n                        className={radio}\n                        value=\"categories\"\n                        control={<Radio />}\n                        label=\"From Categories\"\n                    />\n                    {\n                        typeOfJoke === 'categories'\n                            ? <div className={categoriesStyle}>\n                                { renderJokeCategory() }\n                            </div>\n                            : null\n                        }\n                    <FormControlLabel\n                        className={radio}\n                        value=\"search\"\n                        control={<Radio />}\n                        label=\"Search\"\n                    />\n                        {\n                            typeOfJoke === 'search'\n                            ? <input\n                                className={searchInput}\n                                type='text'\n                                placeholder='Free text search...'\n                                value = {searchValue}\n                                onChange = {(e) => { handleChangeSearchValue(e.target.value) }}\n                                />\n                            : null\n                        }\n                </RadioGroup>\n                <Button\n                    className={buttonSubmit}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={getJokeButtonPressed}\n                >\n                    Get a joke\n                </Button>\n            </div>\n        </div>\n    )\n});\n\nexport default ChooseJoke;\n"]},"metadata":{},"sourceType":"module"}