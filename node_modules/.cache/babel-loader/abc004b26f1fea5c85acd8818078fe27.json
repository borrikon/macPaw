{"ast":null,"code":"var _jsxFileName = \"D:\\\\Work\\\\myProject\\\\mac-paw-test\\\\src\\\\components\\\\joke_item\\\\index.js\";\nimport React, { useContext, useState } from 'react';\nimport { observer } from 'mobx-react';\nimport mess from '../../assets/message.png';\nimport { ReactComponent as HeartEmpt } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/heartFill.svg\";\nimport linkimg from '../../assets/link.png';\nimport { favorite_store_ctx } from '../../store/favorites_store';\nimport { useStyles } from './styles';\nexport default observer(({\n  categories,\n  updated_at,\n  id,\n  value,\n  isFavourite\n}) => {\n  const {\n    jokeContainer,\n    jokeContent,\n    jokeInfo,\n    categoriesActive,\n    jokeContainerFav,\n    jokeInner\n  } = useStyles({});\n  const {\n    addOrRemoveFavorite,\n    setFill,\n    fill\n  } = useContext(favorite_store_ctx); // const [fill, setFill] = useState(false)\n\n  function favoriteButtonPress() {\n    addOrRemoveFavorite({\n      categories,\n      updated_at,\n      id,\n      value\n    });\n  }\n\n  let lastUpdated = Math.floor((new Date() - new Date(updated_at)) / 3600000);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: isFavourite ? jokeContainerFav : jokeContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: favoriteButtonPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(HeartEmpt, {\n    onClick: () => setFill(),\n    fill: fill || isFavourite ? '#FF6767' : '#F8F8F8',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: jokeInner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: mess,\n    alt: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: jokeContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, \"ID \", /*#__PURE__*/React.createElement(\"a\", {\n    target: \"blank\",\n    href: `https://api.chucknorris.io/jokes/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 28\n    }\n  }, id), /*#__PURE__*/React.createElement(\"img\", {\n    src: linkimg,\n    alt: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  })), value)), /*#__PURE__*/React.createElement(\"div\", {\n    className: jokeInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Last update: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 35\n    }\n  }, lastUpdated), \" hours ago\"), categories === undefined || categories.length === 0 ? null : /*#__PURE__*/React.createElement(\"div\", {\n    className: categoriesActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, categories))));\n});","map":{"version":3,"sources":["D:/Work/myProject/mac-paw-test/src/components/joke_item/index.js"],"names":["React","useContext","useState","observer","mess","linkimg","favorite_store_ctx","useStyles","categories","updated_at","id","value","isFavourite","jokeContainer","jokeContent","jokeInfo","categoriesActive","jokeContainerFav","jokeInner","addOrRemoveFavorite","setFill","fill","favoriteButtonPress","lastUpdated","Math","floor","Date","undefined","length"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { observer } from 'mobx-react';\n\nimport mess from '../../assets/message.png'\nimport {ReactComponent as HeartEmpt} from '../../assets/heartFill.svg'\nimport linkimg from '../../assets/link.png'\nimport { favorite_store_ctx } from '../../store/favorites_store'\n\nimport {useStyles} from './styles'\n\n\nexport default observer(({ categories, updated_at, id, value, isFavourite }) => {\n    const {\n        jokeContainer, jokeContent, jokeInfo, categoriesActive,\n        jokeContainerFav, jokeInner\n    } = useStyles({})\n    \n    const { addOrRemoveFavorite, setFill,fill } = useContext(favorite_store_ctx);\n\n   // const [fill, setFill] = useState(false)\n\n    function favoriteButtonPress() { \n        addOrRemoveFavorite({\n            categories, updated_at,\n            id, value\n        })\n    }\n\n    let lastUpdated = Math.floor((new Date()-new Date(updated_at))/3600000)\n\n    return (\n        <div className={isFavourite ? jokeContainerFav : jokeContainer}>\n            <div onClick={favoriteButtonPress}>\n                <HeartEmpt onClick={() => setFill()} fill={(fill || isFavourite) ? '#FF6767' : '#F8F8F8'}/>\n            </div>\n            <div className={jokeInner}>\n                <img src={mess} alt='message'/>\n                <div className={jokeContent}>\n                    <div>\n                        ID <a \n                            target='blank' \n                            href={`https://api.chucknorris.io/jokes/${id}`}\n                            >\n                                {id}\n                            </a>\n                        <img src={linkimg} alt='link' />\n                    </div>\n                    {value}\n                </div>\n            </div>\n            <div className={jokeInfo}>\n                <div>Last update: <span>{lastUpdated}</span> hours ago</div>  \n                {   (categories === undefined || categories.length === 0) \n                    ?  null\n                    : <div className={categoriesActive}>\n                        <span>\n                            {categories}\n                        </span>\n                    </div>\n                }\n            </div>\n        </div>\n    )\n});\n"]},"metadata":{},"sourceType":"module"}